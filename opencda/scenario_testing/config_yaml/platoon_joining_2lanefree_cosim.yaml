description: |-
  Copyright 2021 <UCLA Mobility Lab>
  Author: Runsheng Xu <rxx3386@ucla.edu>
  Content: This is the co-simulation scenario testing configuration file for platooning joining and cooperative merge
           at the customized 2lanefree simple version.

# First define the basic parameters of the vehicles
vehicle_base:
  sensing:
    perception:
      activate: false # when not activated, objects positions will be retrieved from server directly
      camera:
        visualize: 0 # how many camera images need to be visualized. 0 means no visualization for camera
        num: 0 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
        # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
        positions: []
      lidar:
        visualize: false
  map_manager:
    visualize: false
    activate: false
  behavior:
    max_speed: 95 # maximum speed, km/h
    tailgate_speed: 105 # when a vehicles needs to be close to another vehicle asap
    overtake_allowed: false # whether overtake allowed, typically false for platoon leader
    collision_time_ahead: 1.3 # used for collision checking
    overtake_counter_recover: 35 # the vehicle can not do another overtake during next certain steps
    local_planner: &base_local_planner # trajectory planning related
      trajectory_dt: 0.25 # for every dt seconds, we sample a trajectory point from the trajectory path as next goal state

# define sumo simulation setting for traffic generation
sumo:
  port: ~
  host: ~
  gui: true
  client_order: 1
  step_length: ${world.fixed_delta_seconds}

# define the platoon basic characteristics
platoon_base:
  max_capacity: 10
  inter_gap: 0.6 # desired time gap
  open_gap: 1.5 # open gap
  warm_up_speed: 55 # required speed before cooperative merging


scenario:
  platoon_list:
    - name: platoon1
      destination: [1000.372955, 8.3, 0.3]
      members: # the first one is regarded as leader by default
        - name: cav1
          spawn_position: [-350, 8.3, 0.3, 0, 0, 0] # x, y, z, roll, yaw, pitch
          perception:
            camera:
              visualize: 1 # how many camera images need to be visualized. 0 means no visualization for camera
              num: 1 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
              # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
              positions:
                - [2.5, 0, 1.0, 0]
            lidar:
              visualize: true
          behavior:
            local_planner:
              debug_trajectory: true
              debug: false
        - name: cav2
          spawn_position: [-360, 8.3, 0.3, 0, 0, 0]
        - name: cav3
          spawn_position: [-370, 8.3, 0.3, 0, 0, 0]
        - name: cav4
          spawn_position: [-380, 8.3, 0.3, 0, 0, 0]
  single_cav_list: # this is for merging vehicle or single cav without v2x
    - name: single_cav
      spawn_position: [-380, 4.8, 0.3, 0, 0, 0]
      # when this is defined, the above parameter will be ignored, and a special map function will
      # be used to define the spawn position based on the argument
      spawn_special: [0.655]
      destination: [300, 12.0, 0]
      sensing:
        perception:
          camera:
            visualize: 1 # how many camera images need to be visualized. 0 means no visualization for camera
            num: 1 # how many cameras are mounted on the vehicle. Maximum 3(frontal, left and right cameras)
            # relative positions (x,y,z,yaw) of the camera. len(positions) should be equal to camera num
            positions:
              - [2.5, 0, 1.0, 0]
          lidar:
            visualize: true
      v2x:
        communication_range: 35
      behavior:
        overtake_allowed: true
        local_planner:
          debug_trajectory: true
          debug: false


